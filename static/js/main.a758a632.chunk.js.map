{"version":3,"sources":["app/App.js","app/watchlist/watchlistApi.js","app/watchlist/watchlistslice.js","app/watchlist/RiskAmoutQuantity.js","app/watchlist/index.js","app/strategies/strategiesApi.js","app/strategies/index.js","reportWebVitals.js","app/strategies/strategiesslice.js","app/store.js","app/header/index.js","app/backtesting/index.js","index.js"],"names":["App","getwatchliststocks","createAsyncThunk","callback","thunkAPI","a","axios","get","response","data","getStocksDetailsApi","stocks","stockSymbList","reduce","result","item","symbol","body","post","stocksData","spark","priceMap","meta","regularMarketPrice","addstocktowatchlist","stock","status","removestockfromwatchlist","stockSymbol","searchstockApi","searchTermR","quotes","getStockChartData","sevendayprevts","currentdatets","searchApi","console","log","watchlistslice","createSlice","name","initialState","stockprices","searchterm","searchlist","watchlist","chartData","reducers","setsearchtermR","state","action","payload","extraReducers","builder","addCase","fulfilled","chart","actions","RiskAmoutQuantity","entry","useState","riskAmt","setRiskAmt","style","display","width","type","placeholder","value","onChange","event","target","replace","margin","Math","round","WatchList","dispatch","useDispatch","stockpricesR","useSelector","searchlistR","watchlistR","searchStock","objP","useEffect","className","length","onKeyDown","e","keyCode","alert","onClick","border","map","exchDisp","shortname","flexDirection","lowArray","sl","profitPer","JSON","stringify","lowLastPrice","indicators","quote","low","at","lowPrevLastPrice","removeStock","Date","now","getTime","getstrategies","deletestrategy","strategy","addstrategy","Strategies","React","searchTerm","setSearchTerm","strategyUrl","setStrategyUrl","scanScript","setScanScript","setSearchResults","strategyfilter","setStrategyFilter","strategiesR","strategies","handleChange","handleKeypress","request","method","url","encodeURIComponent","then","parse","contents","marginLeft","marginTop","scan","justifyContent","alignItems","backgroundColor","padding","color","borderRadius","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","strategiesSlice","unshift","combineReducers","watchlistReducer","strategiesReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","Header","paddingBottom","to","Backtesting","toggleStatus","setToggleStatus","strategiesToggle","setStrategiesToggle","setData","backTestPrices","setBackTestPrices","loading","setLoading","alldays","setAllDays","afterDayPrices","setAfterDayPrices","numberCounter","setNumberCounter","profit","setProfit","host","window","location","origin","months","fetchDatesApi","fetchAllDatesFromToday","allTimestamps","allDays","afterDatesArrayFromSpecifiedDate","getChartinkData","_url","_type","_scan_clause","scan_clause","loadData","timeStampArr","metaData","tradeTimes","apiObj","i","aggregatedStockList","stockData","n","multiple3","push","moment","format","reverse","findPrices","date","sleep","milliseconds","Promise","resolve","setTimeout","findAllPrices","sData","obj","count","split","dateString","stockItem","prevclose","close","open","high","id","timestamp","createAfterDateObj","afterN","uniqueDates","dates","Set","findUniqueDates","newObj","nextDay","allDates","dateToSearch","afterNDay","index","indexOf","findDayAfterN","allDateArray","findPricesAfterNDays","afterDayData","nDay","afterDayDataKeys","Object","keys","finalData","assign","tempData","tempData3","tempData2","tempdata4","findMAStocks","gainersOrLosers","fetchTop5Gainers","days","newData","slice","j","resp","newPriceData","priceObj","1","2","3","5","10","onDrop","shift","filteredData","filter","onError","err","file","inputElem","reason","addRemoveButton","removeButtonColor","onRemoveFile","fontSize","pl","ret","fontWeight","Number","toFixed","totalStocks","datestring","per","gapUp","gapUpPer","lowPer","chartLink","fp","dateStrArr","persistor","persistStore","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.a758a632.chunk.js","sourcesContent":["import \"./App.css\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nconst proxyAPI2 = \"https://cors-anywhere.herokuapp.com/\";\nconst proxyAPI = \"http://thingproxy.freeboard.io/\";\nconst proxyAPI3 = \"http://www.whateverorigin.org/get?url=\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [watchList, setWatchList] = React.useState([]);\n  const [strategies, setStrategies] = React.useState([]);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.keyCode === 13) {\n      searchStock();\n    }\n  };\n\n  const searchStock = () => {\n    if (searchTerm.length == 0) {\n      alert(\"Please enter name of stock\");\n      return;\n    }\n\n    let searchApi =\n      \"https://query2.finance.yahoo.com/v1/finance/search?q=\" +\n      searchTerm +\n      \"&quotesCount=6&newsCount=0&enableFuzzyQuery=false&quotesQueryId=tss_match_phrase_query&multiQuoteQueryId=multi_quote_single_token_query&newsQueryId=news_ss_symbols&enableCb=false&enableNavLinks=false&vespaNewsTimeoutMs=600\";\n    axios\n      .request({\n        method: \"get\",\n        url: `https://api.allorigins.win/get?url=${encodeURIComponent(\n          searchApi\n        )}`,\n      })\n      .then((response) => {\n        console.log(response);\n        setSearchResults(JSON.parse(response.data.contents).quotes);\n      });\n  };\n\n  // const addStockToList = (item) => {\n  //   console.log(watchList.some(i=>i.symbol === item.symbol));\n  //   if(!watchList.some(i=>i.symbol === item.symbol))\n  //     setWatchList([item,...watchList]);\n  // };\n    \n  const addStockToList = (item) => {\n    axios\n    .request({\n      method: \"post\",\n      url: \"https://us-central1-stockwatch-193209.cloudfunctions.net/stocks\",\n      data: item,\n    })\n    .then((response) => {\n      console.log(response.data);\n      getAllStocks();\n    });    \n  };\n\n  // const removeStockFromList = (item) => {\n  //   var filtered = watchList.filter(el => { return el.symbol !== item.symbol; });\n  //     setWatchList([...filtered]);\n  // };\n\n  const getAllStocks = () => {\n    axios\n    .request({\n      method: \"get\",\n      url: \"https://us-central1-stockwatch-193209.cloudfunctions.net/stocks\",\n    })\n    .then((response) => {\n      console.log(response.data);\n      setWatchList(response.data);\n    });\n  }\n\n  const removeStock = (stockSymbol) => {\n    axios\n    .request({\n      method: \"post\",\n      url: \"https://us-central1-stockwatch-193209.cloudfunctions.net/stocks/delete/\"+stockSymbol,\n    })\n    .then((response) => {\n      console.log(response.data);\n      getAllStocks();\n    });\n  }\n\n  const getAllStrategies = () => {\n    axios\n    .request({\n      method: \"get\",\n      url: \"https://us-central1-stockwatch-193209.cloudfunctions.net/strategy\",\n    })\n    .then((response) => {\n      console.log(response.data);\n      setStrategies(response.data);\n    });\n  }\n\n  useEffect(() => {\n    getAllStocks();\n    getAllStrategies();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleChange}\n        onKeyDown={handleKeypress}\n      />\n      <button\n        onClick={() => {\n          searchStock();\n        }}\n      >\n        {\" \"}\n        Search{\" \"}\n      </button>\n      {/* {JSON.stringify()} */}\n      <table border=\"1px solid black;\">\n        <th>SearchList</th>\n        <tr>\n          <th>{\"Exchange\"}</th>\n          <th>{\"Name\"}</th> <th>{\"Price\"}</th>\n        </tr>\n        {searchResults.map((item) => {\n          return (\n            <tr>\n              <td>{item.exchDisp}</td> <td>{item.shortname}</td>{\" \"}\n              <td>\n                {item.score}\n                {\"  \"}\n              </td>\n              <td>\n                {\n                  <button\n                    onClick={() => {\n                      addStockToList(item);\n                    }}\n                  >\n                    Add\n                  </button>\n                }\n              </td>\n            </tr>\n          );\n        })}\n      </table>\n\n      <br/>\n      <div style={{display:\"flex\", flexDirection:\"row\"}}>\n      <table border=\"1px solid black;\">\n        <tr><th>WatchList</th></tr>\n        {watchList.length > 0 ? (\n          <tr>\n            <th>{\"Exchange\"}</th>\n            <th>{\"Name\"}</th> \n            <th>{\"Price\"}</th>\n          </tr>\n        ) : null}\n        {watchList.map((item) => {\n          return (\n            <tr>\n              <td>{item.exchDisp}</td> <td>{item.shortname}</td>{\" \"}\n              <td>\n                {item.score}\n                {\"  \"}\n              </td>\n              <td>{<button onClick={()=>removeStock(item.symbol)}>Remove</button>}</td>\n              {/* <td>{JSON.stringify(item)}</td> */}\n            </tr>\n          );\n        })}\n      </table>\n\n      &nbsp;&nbsp;\n      <table border=\"1px solid black;\">\n        <tr><th>Strategy</th></tr>\n        {strategies.length > 0 ? (\n          <tr>\n            <th>{\"Exchange\"}</th>\n            <th>{\"Name\"}</th> \n            <th>{\"Price\"}</th>\n          </tr>\n        ) : null}\n        {strategies.map((item) => {\n          return (\n            <tr>\n              <td>{item.name}</td> <td>{item.name}</td>{\" \"}\n              <td>\n                {item.score}\n                {\"  \"}\n              </td>\n              <td>{<button onClick={()=>{}}>Remove</button>}</td>\n              {/* <td>{JSON.stringify(item)}</td> */}\n            </tr>\n          );\n        })}\n      </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from \"axios\";\n\nexport const getwatchliststocks = createAsyncThunk(\n  'fetchByIdStatus',\n  async (callback, thunkAPI) => {\n    const response = await axios.get('https://us-central1-stockwatch-193209.cloudfunctions.net/stocks');  \n    callback(response.data);\n    return response.data;\n  }\n)\n\nconst createStockPriceMap = (stocksData) => {\n    return stocksData.reduce((result, item) => {\n      return { [item.symbol]: item.response[0].meta.regularMarketPrice, ...result };\n    }, {});\n  }\n\nexport const getStocksDetailsApi = createAsyncThunk(\n    'getStocksDetailsApi',\n    async (stocks, thunkAPI) => {\n\n        let stockSymbList = stocks.reduce(function (result, item) {\n            if(result == \"\")\n            return item.symbol;\n            return result + \",\" + item.symbol;\n          }, \"\");\n      \n          let searchApi = \"https://query1.finance.yahoo.com/v7/finance/spark?symbols=\" + stockSymbList + \"&range=1d&interval=5m&indicators=close&includeTimestamps=false&includePrePost=false&corsDomain=in.finance.yahoo.com&.tsrc=finance\";\n      \n          let body = {\n            \"url\": searchApi\n          };\n\n        let response = await axios.post(`https://us-central1-stockwatch-193209.cloudfunctions.net/getstocks`, body);\n        let priceMap = createStockPriceMap(response.data.spark.result);\n\n        return priceMap;\n    }\n  )\n\n  export const addstocktowatchlist = createAsyncThunk(\n    'addstocktowatchlist',\n    async ({stock, callback}, thunkAPI) => {\n        const response = await axios.post('https://us-central1-stockwatch-193209.cloudfunctions.net/stocks', stock);  \n        callback();\n        return response.status;\n    }\n  )\n\n  export const removestockfromwatchlist = createAsyncThunk(\n    'removestockfromwatchlist',\n    async ({stockSymbol, callback}, thunkAPI) => {\n        const response = await axios.post(\"https://us-central1-stockwatch-193209.cloudfunctions.net/stocks/delete/\"+stockSymbol);  \n        callback();\n        return response.status;\n    }\n  )\n\n  export const searchstockApi = createAsyncThunk(\n    'searchstockApi',\n    async ({searchTermR, callback}, thunkAPI) => {\n        let searchApi =\n        \"https://query2.finance.yahoo.com/v1/finance/search?q=\" +\n        searchTermR +\n        \"&quotesCount=6&newsCount=0&enableFuzzyQuery=false&quotesQueryId=tss_match_phrase_query&multiQuoteQueryId=multi_quote_single_token_query&newsQueryId=news_ss_symbols&enableCb=false&enableNavLinks=false&vespaNewsTimeoutMs=600\";\n  \n        let body = {\n            \"url\": searchApi\n        };\n\n        const response = await axios.post(\"https://us-central1-stockwatch-193209.cloudfunctions.net/getstocks\", body);  \n        callback();\n        return response.data.quotes;\n    }\n  )\n\n  export const getStockChartData = createAsyncThunk(\n    'getStockChartData',\n    async ({symbol, sevendayprevts, currentdatets, callback}, thunkAPI) => {\n        let searchApi =\n        \"https://query2.finance.yahoo.com/v8/finance/chart/\" +\n        symbol +\n        \"?formatted=true&lang=en-US&region=US&includeAdjustedClose=true&interval=1d&period1=\"+sevendayprevts+\"&period2=\"+currentdatets+\"&events=capitalGain%7Cdiv%7Csplit&useYfid=true&corsDomain=finance.yahoo.com\";\n        console.log(\"URL: \", searchApi);\n        let body = {\n            \"url\": searchApi\n        };\n\n        const response = await axios.post(\"https://us-central1-stockwatch-193209.cloudfunctions.net/getstocks\", body);  \n        callback();\n        return response;\n    }\n  )","import { createSlice } from '@reduxjs/toolkit'\nimport { getwatchliststocks, getStocksDetailsApi, addstocktowatchlist, removestockfromwatchlist, searchstockApi, getStockChartData } from \"./watchlistApi\";\n\nconst initialState = {\n  stockprices: {},\n  searchterm: \"\",\n  searchlist: [],\n  watchlist: [],\n  chartData: {},\n}\n\nexport const watchlistslice = createSlice({\n  name: 'watchlist',\n  initialState,\n  reducers: {\n    setsearchtermR: (state, action) => {\n      state.searchterm = action.payload;\n    }\n  },\n    extraReducers: (builder) => {\n    // Add reducers for additional action types here, and handle loading state as needed\n    builder.addCase(getwatchliststocks.fulfilled, (state, action) => {\n      state.watchlist = action.payload\n    });\n    builder.addCase(getStocksDetailsApi.fulfilled, (state, action) => {\n      state.stockprices = action.payload;\n    });\n    builder.addCase(addstocktowatchlist.fulfilled, (state, action) => {\n      //do nothing\n    });\n    builder.addCase(removestockfromwatchlist.fulfilled, (state, action) => {\n      //do nothing\n    });\n    builder.addCase(searchstockApi.fulfilled, (state, action) => {\n      // console.log(\"Success Action: \", action.payload);\n      //do nothing\n      state.searchlist = action.payload\n    });\n    builder.addCase(getStockChartData.fulfilled, (state, action) => {\n      console.log(\"Success Action: \", action.payload);\n      let symbol = action.payload.data.chart.result[0].meta.symbol;\n      state.chartData[symbol] = action.payload;\n    });    \n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setsearchtermR } = watchlistslice.actions\n\nexport default watchlistslice.reducer","import React, { useState, useEffect } from \"react\";\n\nexport default function RiskAmoutQuantity({entry}){\n    const [riskAmt, setRiskAmt] = useState(\"\");\n\n    const handleChange = (event) => {\n        setRiskAmt(event.target.value.replace(/\\D/,''));\n        // if (searchTermR.length == 0) {\n        //     return;\n        // }\n        // searchStock();\n      };\n\n    // return(\n    //     <div style={{display:\"flex\"}}>\n    //     <input\n    //         style={{width:\"70px\"}}\n    //         type=\"text\"\n    //         placeholder=\"Risk\"\n    //         value={riskAmt}\n    //         onChange={handleChange}\n    //         // onKeyDown={handleKeypress}\n    //     />\n    //     <div style={{margin: 10}}>\n    //         {Math.round(riskAmt/diff)}\n    //     </div>\n    //     </div>\n    // );\n\n    return(\n        <div style={{display:\"flex\"}}>\n        <input\n            style={{width:\"70px\"}}\n            type=\"text\"\n            placeholder=\"Risk\"\n            value={riskAmt}\n            onChange={handleChange}\n            // onKeyDown={handleKeypress}\n        />\n        <div style={{margin: 10}}>\n            {Math.round(riskAmt/entry)}\n        </div>\n        </div>\n    );\n}","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setsearchtermR } from './watchlistslice';\nimport { getwatchliststocks, getStocksDetailsApi, addstocktowatchlist, removestockfromwatchlist, searchstockApi, getStockChartData } from \"./watchlistApi\";\nimport RiskAmoutQuantity from \"./RiskAmoutQuantity\";\n\nfunction WatchList() {\n  const dispatch = useDispatch();\n\n  const stockpricesR = useSelector((state) => state.watchlist.stockprices);  \n  const searchlistR = useSelector((state) => state.watchlist.searchlist);\n  const searchTermR = useSelector((state) => state.watchlist.searchterm);\n  const watchlistR = useSelector((state) => state.watchlist.watchlist);\n  const chartData = useSelector((state) => state.watchlist.chartData);\n\n  // useEffect(() => {\n  //   const delayDebounceFn = setTimeout(() => {\n  //     console.log(searchTermR)\n  //     // Send Axios request here\n  //     // searchStock();\n  //   }, 3000)\n\n  //   return () => clearTimeout(delayDebounceFn)\n  // },[searchTermR]);\n\n  const handleChange = (event) => {\n    dispatch(setsearchtermR(event.target.value));\n    if (searchTermR.length == 0) {\n        return;\n    }\n    // searchStock();\n  };\n\n  const handleKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.keyCode === 13) {\n        if (searchTermR.length == 0) {\n            alert(\"Please enter name of stock\");\n            return;\n          }\n      searchStock();\n    }\n  };\n\n  const searchStock = () => {\n    let objP = {};\n    objP.searchTermR = searchTermR+\"\";\n    objP.callback = () => {};\n    dispatch(searchstockApi(objP));\n  };\n\n  const removeStock = (stockSymbol) => {\n      let objP = {};\n      objP.stockSymbol = stockSymbol;\n      objP.callback = () => { \n        dispatch(getwatchliststocks((stocksData)=>{\n          dispatch(getStocksDetailsApi(stocksData));\n        }));\n      }\n\n    dispatch(removestockfromwatchlist(objP));\n  }\n\n  useEffect(() => {\n    dispatch(getwatchliststocks((stocksData)=>{\n      dispatch(getStocksDetailsApi(stocksData));\n    }));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTermR}\n        onChange={handleChange}\n        onKeyDown={handleKeypress}\n      />\n      <button\n        onClick={() => {\n          searchStock();\n        }}\n      >\n        {\" \"}\n        Search{\" \"}\n      </button>\n      <table border=\"1px solid black;\">\n        <th>Search List</th>\n        <tr>\n          <th>{\"Exchange\"}</th>\n          <th>{\"Name\"}</th>\n        </tr>\n        {searchlistR.map((item) => {\n          return (\n            <tr>\n              <td>{item.exchDisp}</td> <td>{item.shortname}</td>{\" \"}\n              <td>\n                {\n                  <button\n                    onClick={() => {\n                      \n                      let objP = {};\n                      objP.stock = item;\n                      objP.callback = () => { \n                        dispatch(getwatchliststocks((stocksData)=>{\n                          dispatch(getStocksDetailsApi(stocksData));\n                        }));\n                      };\n                      \n                      dispatch(addstocktowatchlist(\n                        objP\n                      ));\n                    }}\n                  >\n                    Add\n                  </button>\n                }\n              </td>\n            </tr>\n          );\n        })}\n      </table>\n\n      <br/>\n      <div style={{display:\"flex\", flexDirection:\"row\"}}>\n      <table border=\"1px solid black;\">\n        <tr><th>WatchList</th></tr>\n        {watchlistR.length > 0 ? (\n          <tr>\n            <th></th>\n            <th>{\"Exchange\"}</th>\n            <th>{\"Name\"}</th> \n            <th>{\"Price\"}</th>\n            <th></th>\n            <th>SL</th>\n            <th>TARGET</th>\n            <th>  ENTRY  </th>\n            <th>Profit%</th>\n            {/* <th>Risk.Amt  | Quantity </th> */}\n            <th>Total Amt  | Buy Qty </th>\n          </tr>\n        ) : null}\n        {watchlistR.map((item) => {\n          let lowArray = [];\n          let sl = 0;\n          let target = 0;\n          let entry = stockpricesR[item.symbol];\n          let profitPer = 0;\n          let diff = 0;\n\n          console.log(\"ChartData: \", JSON.stringify(chartData));\n          if(chartData && chartData[item.symbol]) {\n            lowArray = chartData[item.symbol].data.chart.result[0].indicators.quote[0].low;\n\n            let lowLastPrice = lowArray.at(-1);\n            let lowPrevLastPrice = lowArray.at(-2);\n            if(lowPrevLastPrice < lowLastPrice)\n              sl = lowPrevLastPrice - 1;\n            else \n              sl = lowLastPrice - 1;\n              target = (entry - sl) * 2 + entry;\n              profitPer = (((entry - sl)*2)/entry) * 100;\n              diff = Math.round(entry - sl);\n          }\n\n          return (\n            <tr>\n              <td>{<button onClick={()=>removeStock(item.symbol)}>Remove</button>}</td>\n              <td>{item.exchDisp}</td> <td>{item.shortname}</td>{\" \"}\n              <td>\n                {stockpricesR[item.symbol]}\n                {\"  \"}\n              </td>\n              <td>{<button onClick={()=>{\n                let objP = {};\n                objP.symbol = item.symbol;\n                objP.sevendayprevts = Math.round(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).getTime()/1000);\n                objP.currentdatets = Math.round(new Date().getTime()/1000);\n                console.log(\"Seven day prev time: \", Math.round(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).getTime()/1000));\n                objP.callback = () => {};\n                dispatch(getStockChartData(objP));\n              }}>Calculate</button>}</td>\n              <td>{Math.round(sl)}</td>\n              <td>{Math.round(target)}</td>\n              <td>{Math.round(entry)}</td>\n              <td>{Math.round(profitPer)}</td>\n              <td><RiskAmoutQuantity entry={entry} /></td>\n            </tr>\n          );\n        })}\n      </table>\n      </div>\n    </div>\n  );\n}\n\nexport default WatchList;\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from \"axios\";\n\nexport const getstrategies = createAsyncThunk(\n    'getstrategies',\n    async (callback, thunkAPI) => {\n      const response = await axios.get('https://us-central1-stockwatch-193209.cloudfunctions.net/strategy');  \n      callback(response.data);\n      return response.data;\n    }\n  )\n\nexport const deletestrategy = createAsyncThunk(\n    'deletestrategy',\n    async ({strategy, callback}, thunkAPI) => {\n      const response = await axios.post('https://us-central1-stockwatch-193209.cloudfunctions.net/strategy/delete', strategy);  \n      callback(response.data);\n      return response.data;\n    }\n)\n\nexport const addstrategy = createAsyncThunk(\n    'addstrategy',\n    async ({strategy, callback}, thunkAPI) => {\n      const response = await axios.post('https://us-central1-stockwatch-193209.cloudfunctions.net/strategy', strategy);  \n      callback(response.data);\n      return response.data;\n    }\n)\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getwatchliststocks, getStocksDetailsApi, addstocktowatchlist, removestockfromwatchlist, searchstockApi } from \"../watchlist/watchlistApi\";\nimport { getstrategies, deletestrategy, addstrategy } from \"./strategiesApi\";\n\nfunction Strategies() {\n  const dispatch = useDispatch();\n\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [strategyUrl, setStrategyUrl] = React.useState(\"\");\n  const [scanScript, setScanScript] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [watchList, setWatchList] = React.useState([]);\n  const [strategies, setStrategies] = React.useState([]);\n  const [strategyfilter, setStrategyFilter] = React.useState(\"\");\n\n  const stockpricesR = useSelector((state) => state.watchlist.stockprices);  \n  const searchlistR = useSelector((state) => state.watchlist.searchlist);\n  const searchTermR = useSelector((state) => state.watchlist.searchterm);\n  const watchlistR = useSelector((state) => state.watchlist.watchlist);\n  const strategiesR = useSelector((state) => state.strategies.strategies);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.keyCode === 13) {\n      searchStock();\n    }\n  };\n\n  const searchStock = () => {\n    if (searchTerm.length == 0) {\n      alert(\"Please enter name of stock\");\n      return;\n    }\n\n    let searchApi =\n      \"https://query2.finance.yahoo.com/v1/finance/search?q=\" +\n      searchTerm +\n      \"&quotesCount=6&newsCount=0&enableFuzzyQuery=false&quotesQueryId=tss_match_phrase_query&multiQuoteQueryId=multi_quote_single_token_query&newsQueryId=news_ss_symbols&enableCb=false&enableNavLinks=false&vespaNewsTimeoutMs=600\";\n    axios\n      .request({\n        method: \"get\",\n        url: `https://api.allorigins.win/get?url=${encodeURIComponent(\n          searchApi\n        )}`,\n      })\n      .then((response) => {\n        console.log(response);\n        setSearchResults(JSON.parse(response.data.contents).quotes);\n      });\n  };\n\n  useEffect(() => {\n    // getAllStocks();\n    // getAllStrategies();\n    dispatch(getstrategies((data)=>{\n      // alert(JSON.stringify(data));\n    }));\n  }, []);\n\n  return (\n    <div className=\"App\">\n          <div style={{display:\"flex\", flexDirection:\"column\", marginLeft:10}}>\n        <input\n          style={{width:\"300px\"}}\n          type=\"text\"\n          placeholder=\"Strategy Name\"\n          value={searchTerm}\n          onChange={handleChange}\n          onKeyDown={handleKeypress}\n        />\n        <input\n          style={{width:\"300px\", marginTop:5}}\n          type=\"text\"\n          placeholder=\"Url\"\n          value={strategyUrl}\n          // onChange={setStrategyUrl}\n          onChange = {(event) => {\n            setStrategyUrl(event.target.value);\n          }}\n          // onKeyDown={handleKeypress}\n        />\n        <input\n          style={{width:\"300px\", marginTop:5}}\n          type=\"text\"\n          placeholder=\"Scan Script\"\n          value={scanScript}\n          // onChange={setScanScript}\n          onChange = {(event) => {\n            setScanScript(event.target.value);\n          }}\n          // onKeyDown={handleKeypress}\n        />\n        <button\n          style={{width:\"100px\", marginTop:2}}\n          onClick={() => {\n            let objP = {};\n            objP.strategy = {name: searchTerm, url: strategyUrl, scan: scanScript};\n            // objP.url = {name: strategyUrl};\n            objP.callback = () => {\n              dispatch(getstrategies((data)=>{\n                      \n              }));\n            };\n\n            dispatch(addstrategy(objP));\n          }}\n        >\n          Add Strategy\n        </button>\n      </div>\n      <br/><br/>\n\n       <div style={{display:\"flex\", flexDirection:\"row\"}}>\n      &nbsp;&nbsp;\n      <table border=\"1px solid black;\">\n        <tr><th>&nbsp;&nbsp;Strategy&nbsp;&nbsp;</th></tr>\n        {strategiesR.length > 0 ? (\n          <tr>\n            <th>{\"Name\"}</th> \n          </tr>\n        ) : null}\n        {strategiesR.map((item) => {\n          return (\n            <tr>\n              <td>{item.name}</td>\n              <td>{<button onClick={()=>{\n                let objP = {};\n                objP.strategy = item;\n                objP.callback = () => {\n                  dispatch(getstrategies((data)=>{\n                      \n                  }));\n                }\n                dispatch(deletestrategy(objP));\n              }}>Remove</button>}</td>\n              {/* <td>{JSON.stringify(item)}</td> */}\n            </tr>\n          );\n        })}\n      </table>\n      </div>\n\n        <div style={{display:\"flex\", flexDirection:\"row\", marginTop:20}}>\n         {strategiesR.map((item) => {\n          return (\n                <div\n                 onClick={()=>{\n                  setStrategyFilter(item.name);\n                 }}\n                style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\", backgroundColor: strategyfilter==item.name ? \"green\": \"grey\", padding:\"10px\", color:\"white\", borderRadius:30, margin: 10}}>{item.name}</div>\n          );\n        })}\n        </div>\n\n\n      \n      <br/>\n      <br/>\n      \n      \n      <div style={{display:\"flex\", flexDirection:\"column\", width:\"30%\", marginLeft:10}}>\n      <input\n        // style={{width:\"100%\"}}\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleChange}\n        onKeyDown={handleKeypress}\n      />\n      <button\n        style={{width:\"40%\", marginTop:2}}\n        onClick={() => {\n          searchStock();\n        }}\n      >\n        {\" \"}\n        Search{\" \"}\n      </button>\n      </div>\n      <br/>\n      <br/>\n\n      <table border=\"1px solid black;\">\n        <th>Search List</th>\n        <tr>\n          <th>{\"Exchange\"}</th>\n          <th>{\"Name\"}</th>\n        </tr>\n        {searchlistR.map((item) => {\n          return (\n            <tr>\n              <td>{item.exchDisp}</td> <td>{item.shortname}</td>{\" \"}\n              <td>\n                {\n                  <button\n                    onClick={() => {\n                      \n                      let objP = {};\n                      objP.stock = item;\n                      objP.callback = () => { \n                        dispatch(getwatchliststocks((stocksData)=>{\n                          dispatch(getStocksDetailsApi(stocksData));\n                        }));\n                      };\n                      \n                      dispatch(addstocktowatchlist(\n                        objP\n                      ));\n                    }}\n                  >\n                    Add\n                  </button>\n                }\n              </td>\n            </tr>\n          );\n        })}\n      </table>\n\n      {/* {JSON.stringify()} */}\n      <div style={{display:\"flex\", flexDirection:\"row\"}}>\n      <table border=\"1px solid black;\">\n        <tr><th>WatchList</th></tr>\n        {watchlistR.length > 0 ? (\n          <tr>\n            <th>{\"Exchange\"}</th>\n            <th>{\"Name\"}</th> \n            <th>{\"Price\"}</th>\n          </tr>\n        ) : null}\n        {watchlistR.map((item) => {\n          return (\n            <tr>\n              <td>{item.exchDisp}</td> <td>{item.shortname}</td>{\" \"}\n              <td>\n                {stockpricesR[item.symbol]}\n                {\"  \"}\n              </td>\n              <td>{<button onClick={()=>{}}>Remove</button>}</td>\n              {/* <td>{JSON.stringify(item)}</td> */}\n            </tr>\n          );\n        })}\n      </table>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Strategies;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit'\nimport { getstrategies, deletestrategy, addstrategy } from \"./strategiesApi\";\n\nconst initialState = {\n    strategies: [{ name: \"All Strategies\" }],\n}\n  \nexport const strategiesSlice = createSlice({\n    name: 'strategies',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(getstrategies.fulfilled, (state, action) => {\n            state.strategies = action.payload;\n            state.strategies.unshift({ name: \"All Strategies\" });            \n        });\n        builder.addCase(deletestrategy.fulfilled, (state, action) => {\n            // console.log(\"Success Action: \", action.payload);\n            // state.strategies = action.payload\n        });\n        builder.addCase(addstrategy.fulfilled, (state, action) => {\n            // console.log(\"Success Action: \", action.payload);\n            // state.strategies = action.payload\n        });\n    }\n});\n\nexport default strategiesSlice.reducer","import { configureStore } from '@reduxjs/toolkit';\nimport watchlistReducer from \"./watchlist/watchlistslice\";\nimport strategiesReducer from \"./strategies/strategiesslice\";\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst reducers = combineReducers({\n  watchlist: watchlistReducer,\n  strategies: strategiesReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n})\n\n","import { Link } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <div>\n      <h1>Black Pearl</h1>\n      <nav\n        style={{\n          // borderBottom: \"solid 1px\",\n          paddingBottom: \"1rem\"\n        }}\n      >\n        <Link to=\"/bp/watchlist\">WatchList</Link> |{\"  \"}\n        <Link to=\"/bp/strategies\">Strategies</Link> |{\"  \"}\n        <Link to=\"/bp/backtest\">BackTest</Link>\n      </nav>\n    </div>\n  );\n}","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSVReader } from 'react-papaparse';\nimport moment from \"moment\";\nimport {\n  fileOpen,\n  directoryOpen,\n  fileSave,\n} from 'browser-fs-access';\n\nconst Backtesting = () => {\n   const [toggleStatus, setToggleStatus] = useState(false);\n   const [strategiesToggle, setStrategiesToggle] = useState(false);\n   const [data, setData] = useState([]);\n   const [backTestPrices, setBackTestPrices] = useState({});\n   const [loading, setLoading] = useState(0);\n   const [alldays, setAllDays] = useState([]);\n   const [afterDayPrices, setAfterDayPrices] = useState({});\n   const [numberCounter, setNumberCounter] = useState({});\n   const [profit, setProfit] = useState({});\n   var host = window.location.origin.replace(\"3000\", \"8080\");\n\n   const marketcap = {\n    Largecap: \"Largecap\",\n    Midcap: \"Midcap\",\n    Smallcap: \"Smallcap\"\n   }\n   const months = {\n    '01': 'JAN',\n    '02': 'FEB',\n    '03': 'MAR',\n    '04': 'APR',\n    '05': 'MAY',\n    '06': 'JUN',\n    '07': 'JUL',\n    '08': 'AUG',\n    '09': 'SEP',\n    '10': 'OCT',\n    '11': 'NOV',\n    '12': 'DEC'\n}\n\nconst monthsW = {\n  'JAN': '01',\n  'FEB': '02',\n  'MAR': '03',\n  'APR': '04',\n  'MAY': '05',\n  'JUN': '06',\n  'JUL': '07',\n  'AUG': '08',\n  'SEP': '09',\n  'OCT': '10',\n  'NOV': '11',\n  'DEC': '12' \n}\n\nconst strategiesR = useSelector((state) => state.strategies.strategies);\n\n    useEffect(async () => {\n      await fetchDatesApi();\n    }, []);\n\n    const fetchDatesApi = async() => {\n      let allTimestamps = await fetchAllDatesFromToday();\n      let allDays = afterDatesArrayFromSpecifiedDate(allTimestamps);\n      console.log(\"AllDays: \", JSON.stringify(allDays));\n      setAllDays(allDays);\n      return;\n    }\n\n   const handleOnDrop = (data) => {\n      console.log('---------------------------')\n      console.log(data[0].data);\n      console.log(data)\n\n      data.shift();\n\n      let filteredData = data.filter(stock => stock.data[3] != \"Indices\");\n        // filteredData = filteredData.filter(stock => stock.data[2] != marketcap.Smallcap);\n        // filteredData = filteredData.filter(stock => stock.data[2] != marketcap.Midcap);\n      console.log(\"Filtered Data: \",JSON.stringify(filteredData));\n      setData(filteredData.reverse());\n      console.log('---------------------------')\n    }\n  \n    const handleOnError = (err, file, inputElem, reason) => {\n      console.log(err)\n    }\n  \n    const handleOnRemoveFile = (data) => {\n      console.log('---------------------------')\n      console.log(data)\n      console.log('---------------------------')\n    }\n\n    //calling api function again and again\n      // your callback gets executed automatically once the data is received\n\n    const getChartinkData = async (_url, _type, _scan_clause) => {\n      let body = {\n        url: _url,\n        type: _type,\n        scan_clause: { scan_clause: _scan_clause },\n      };\n      console.log(\"BODY: \", JSON.stringify(body));\n      let response = await axios.post(\"http://localhost:8082/apis\", body);\n      return response;\n    }\n\n    const loadData = (chartData) => {\n      // console.log(\"Load Data: \", JSON.stringify(resp));\n      let timeStampArr = chartData.metaData[0].tradeTimes;\n\n      let apiObj = [];\n      for(let i=0;i<chartData.aggregatedStockList.length; i++) {\n        let stockData = chartData.aggregatedStockList[i];\n\n        if(stockData.length == 0) {\n          continue;\n        }\n\n        \n        for(let n=1;n<=(stockData.length/3); n++) {\n          let multiple3 = (n-1)*3;\n          apiObj.push({ data: [moment(new Date(timeStampArr[i])).format('DD-MM-YYYY'), stockData[multiple3], stockData[multiple3+1], stockData[multiple3+2]] });\n        }\n\n        // console.log(\"timeStampArr: \", i);\n      }\n      setData(apiObj.reverse());\n      // console.log(\"FinalData:  \", JSON.stringify(apiObj));\n\n    }\n\n    const loadTodaysData = (data) => {\n      let apiObj = [];\n      for(let n=0; n<data.length; n++) {\n        apiObj.push({ data: [moment(new Date()).format('DD-MM-YYYY'), data[n].nsecode, data[n].nsecode, data[n].close] });\n      }\n      setData(apiObj.reverse());\n    }\n\n    const findPrices = async (date, symbol) => {\n      let response = await axios.get(`${host}/getdata/${date}${symbol}`);\n      return response;\n    }\n\n    const sleep = milliseconds => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds));\n    };\n\n    const findAllPrices = async (sData) => {\n      let obj = {};\n\n      let count = 0;\n\n      for(let i = 0; i < sData.length; i++) {\n      let stock = sData[i];\n\n      let date = stock.data[0].split(\"-\"); \n      let dateString = date[0]+\"/\"+months[date[1]]+\"/\"+date[2]+\"/\";\n\n      count = 0;\n\n      let response;\n      do {\n        response = await findPrices(dateString, stock.data[1]);\n        console.log(JSON.stringify(response));\n        if(response.data.status === \"downloading\" || response.data.status === \"downloadagain\") {\n              console.log(\"IF EXECUTED\");\n              count=count+1;\n              await sleep(3000);\n              if(count == 3) {\n                break;\n              }\n        }\n      } while (response.data.status === \"downloading\" || response.data.status === \"downloadagain\");\n      if(count == 3) {\n        continue;\n      }\n\n\n      let stockItem = {\n        prevclose: response.data.stockData.prevclose,\n        close: response.data.stockData.close,\n        open: response.data.stockData.open,\n        low: response.data.stockData.close,\n        high: response.data.stockData.high\n      };\n\n      let id =response.data.stockData.timestamp+\"\"+response.data.stockData.symbol;\n       \n\n      obj = { ...obj, [id]: stockItem,  };\n      setLoading(i);\n      setBackTestPrices(obj);\n     }\n\n     \n      setBackTestPrices(obj);\n    }\n\n    const findUniqueDates = (data) => {\n      let uniqueDates = [];\n      let dates = [];\n      for(let i = 0; i < data.length; i++) {\n        let stock = data[i];\n        let date = stock.data[0];\n        dates[i] = date;\n      }\n      uniqueDates = [...new Set(dates)];\n\n\n      console.log(\"Unique Dates: \", JSON.stringify(uniqueDates));\n      return uniqueDates;\n    }\n\n    const findDayAfterN = (uniqueDates, allDates, dateToSearch, afterNDay) => {\n      // console.log(\"findAfterN Func: \", JSON.stringify(uniqueDates),\" \", JSON.stringify(allDates),\" \", JSON.stringify(dateToSearch),\" \", JSON.stringify(afterNDay));\n      let index = allDates.indexOf(dateToSearch);\n      let nextDay = allDates[index+afterNDay];\n      // console.log(\"Date :\", nextDay);\n      // console.log(\"Date: \", moment(new Date()).format('DD-MM-YYYY'));\n      if(!nextDay || nextDay === moment(new Date()).format('DD-MM-YYYY')) {\n        return \"UNAVAIL\";\n      }\n      return nextDay;\n    }\n\n    const createAfterDateObj = (data, afterN) => {\n      let uniqueDates = findUniqueDates(data);\n      \n      let newObj = {};\n      // console.log(\"DATAA: \", JSON.stringify(data));\n      data.map(item => {\n        let nextDay = findDayAfterN(uniqueDates, alldays, item.data[0], afterN);\n\n        let date = item.data[0].split(\"-\"); \n        let dateString = date[0]+\"-\"+date[1]+\"-\"+date[2]+\"\"+item.data[1];\n\n        newObj[dateString] = { date: nextDay, symbol: item.data[1], close: 0, prevclose: 0 };\n      });\n      return newObj;\n    }\n\n    const fetchAllDatesFromToday = async () => {\n      let body = {url:`https://query2.finance.yahoo.com/v8/finance/chart/TATASTEEL.NS?formatted=true&crumb=GDg7ptpgjjp&lang=en-US&region=US&includeAdjustedClose=true&interval=1d&period1=820454400&period2=${Math.round(+new Date()/1000)}&events=capitalGain%7Cdiv%7Csplit&useYfid=true&corsDomain=finance.yahoo.com`};\n      let response = await axios.post(\"https://us-central1-stockwatch-193209.cloudfunctions.net/getstocks\", body);\n\n      console.log(\"All Dates Resp: \", JSON.stringify(response));\n      console.log(\"LAST ITEM: \", response.data.chart.result[0].timestamp[0]);\n      return response.data.chart.result[0].timestamp;\n    }\n\n    const afterDatesArrayFromSpecifiedDate = (allDateArray) => {\n      let stringArr = [];\n      stringArr = allDateArray.map(item => moment(new Date(item*1000)).format('DD-MM-YYYY'));\n      // console.log(stringArr);\n      // console.log(\"StartElement: \", stringArr[0], \"Last Element: \", stringArr[allDateArray.length-1]);\n      return stringArr;\n    }\n\n    const findPricesAfterNDays = async (afterDayData, nDay) => {\n      console.log(\"AFTERDAYDATA: \", JSON.stringify(afterDayData));\n          //   let obj = {};\n        let afterDayDataKeys = Object.keys(afterDayData);\n        // let finalData = {};\n        let finalData = Object.assign({}, afterDayPrices);\n        let count = 0;\n        for(let i = 0; i < afterDayDataKeys.length; i++) {\n          // console.log(\"KEYS: \", afterDayData[afterDayDataKeys[i]]);\n          let stock = afterDayData[afterDayDataKeys[i]];\n\n          if(stock.date == \"UNAVAIL\") {\n            continue;\n          }\n\n          let date = stock.date.split(\"-\"); \n          let dateString = date[0]+\"/\"+months[date[1]]+\"/\"+date[2]+\"/\";\n\n          let response;\n\n          count=0;\n          do {\n            response = await findPrices(dateString, stock.symbol);\n            console.log(JSON.stringify(response));\n            if(response.data.status === \"downloading\" || response.data.status === \"downloadagain\") {\n              console.log(\"IF EXECUTED\");\n              count=count+1;\n              await sleep(3000);\n              if(count == 3) {\n                break;\n              }\n            }\n          } while (response.data.status === \"downloading\" || response.data.status === \"downloadagain\");\n          if(count == 3) {\n            continue;\n          }\n\n          let stockItem = {\n            prevclose: response.data.stockData.prevclose,\n            close: response.data.stockData.close,\n            open: response.data.stockData.open,\n            low: response.data.stockData.low,\n            high: response.data.stockData.high\n          };\n\n\n          // let newPriceData = {\n          //   [datesymbolkey]: { ...afterDayData[afterDayDataKeys[i]], ...stockItem }\n          // };\n\n          // finalData = {\n          //   ...afterDayPrices, [nDay]: { ...afterDayPrices[nDay],  ...newPriceData}\n          // }\n          // let newAfterDayPrices = Object.assign({}, afterDayPrices);\n          let tempData = { ...finalData[nDay] };\n          let tempData2;\n\n\n          tempData2 = { ...tempData[afterDayDataKeys[i]] };\n\n         let tempData3 = { ...tempData[afterDayDataKeys[i]], ...stockItem };\n\n         tempData2 = { [afterDayDataKeys[i]]: { ...tempData3 } };\n\n         let tempdata4 = { [nDay]: { ...tempData, ...tempData2 },  };\n         finalData = { ...finalData, ...tempdata4 };\n\n          // = {[datesymbolkey]:{}};\n          // finalData = tempData[datesymbolkey] = { ...afterDayPrices[nDay][dateString], ...stockItem }\n\n          // let newObj = { [nDay]: finalData }; \n          // console.log(\"Current DATA: \", JSON.stringify(afterDayPrices));\n          // break;\n          // console.log(\"DATAT: \", JSON.stringify({...afterDayPrices, ...response.data.stockData}));\n          // break;\n          // console.log(\"NEWPRICE DATA: \", JSON.stringify(newPriceData));\n          console.log(\"Final DATA: \", JSON.stringify(afterDayDataKeys[i]),\" ITEM: \", JSON.stringify(tempData2));\n          console.log(\"TempData: \", JSON.stringify(tempdata4));\n          setAfterDayPrices(finalData);\n          // break;\n\n          setNumberCounter({...numberCounter, ...{[nDay]: i}});\n\n          let profitPer = profit[nDay] == null ? 0 : profit[nDay] + 1;\n          setProfit({...profit, ...{[nDay]: profitPer}});\n        }\n        setAfterDayPrices(finalData);\n    }\n\n    const findMAStocks = async (date, gainersOrLosers) => {\n      // let response = await axios.get(`${host}/getmadata/${date}`);\n      let response = await axios.get(`http://localhost:8080/getmadata/${date}/${gainersOrLosers}`);\n      return response;\n    }\n\n    const fetchTop5Gainers = async(days, gainersOrLosers) => {\n      let count=0;\n      let newData = Object.assign([],data);\n\n      for(let i=alldays.length-1;i>=alldays.length - days + 1;i--) {\n        let date = alldays[i].split(\"-\");\n        let dateString = date[0]+\"/\"+months[date[1]]+\"/\"+date[2].slice(-2);\n\n        count=0;\n        // let response = await findMAStocks(dateString);\n        let response;\n        do {\n          response = await findMAStocks(dateString, gainersOrLosers);\n          console.log(JSON.stringify(response));\n          if(response.data.status === \"downloading\" || response.data.status === \"downloadagain\") {\n            console.log(\"IF EXECUTED\");\n            count=count+1;\n            await sleep(1000);\n            if(count == 2) {\n              break;\n            }\n          }\n        } while (response.data.status === \"downloading\" || response.data.status === \"downloadagain\");\n\n\n        // console.log(date);\n        // // console.log(dateString);\n        let stock = response.data.data;\n\n        for(let j=0;j<stock.length;j++) {\n            newData.push({data:[alldays[i],stock[j][1],\"\",\"\"]});\n            // setData(prev => ([...prev, [date, stock[1], stock[1], stock[1], stock[1]]]))\n            console.log(\"NEW DATA: \", JSON.stringify(newData));\n            console.log(JSON.stringify(response));\n            // setData([newData]);\n        }\n\n        // setData(newData);\n      }\n      setData(newData);\n      // let response = await findMAStocks();\n\n    }\n\n    // const findAllPrices = async (sData) => {\n    //   let obj = {};\n    //   for(let i = 0; i < sData.length; i++) {\n    //   let stock = sData[i];\n\n    //   let date = stock.data[0].split(\"-\"); \n    //   let dateString = date[0]+\"/\"+months[date[1]]+\"/\"+date[2]+\"/\";\n\n\n    //   let response;\n    //   do {\n    //     response = await findPrices(dateString, stock.data[1]);\n    //     console.log(JSON.stringify(response));\n    //     if(response.data.status === \"downloading\" || response.data.status === \"downloadagain\") {\n    //       console.log(\"IF EXECUTED\");\n    //       await sleep(2000);\n    //     }\n    //   } while (response.data.status === \"downloading\" || response.data.status === \"downloadagain\");\n\n\n\n    //   let stockItem = {\n    //     prevclose: response.data.stockData.prevclose,\n    //     close: response.data.stockData.close,\n    //     pl:\"0\"\n    //   };\n\n    //   let id =response.data.stockData.timestamp+\"\"+response.data.stockData.symbol;\n       \n\n    //   obj = { ...obj, [id]: stockItem,  };\n    //   setLoading(i);\n    //   setBackTestPrices(obj);\n    //  }\n\n     \n    //   setBackTestPrices(obj);\n    // }\n\n      return (<div>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n            {/* {host} */}\n\n              <div onClick={async ()=>{\n                await fetchTop5Gainers(40, \"gainers\");\n\n                // setData([{data:[\"07-05-2021\",\"HINDALCO\",\"Largecap\",\"Metals\"]}]);\n              }}>{\"Top 5 Gainers\"}</div>\n\n              <div style={{marginLeft:10}} onClick={async ()=>{\n                await fetchTop5Gainers(40, \"losers\");\n\n                // setData([{data:[\"07-05-2021\",\"HINDALCO\",\"Largecap\",\"Metals\"]}]);\n              }}>{\"Top 5 Losers\"}</div>\n\n              <div style={{marginLeft:20}} onClick={()=>{\n                  setToggleStatus(!toggleStatus);\n              }}>{toggleStatus?\"Close CSV\":\"Add CSV\"}</div>\n\n              <div style={{marginLeft:20}} onClick={()=>{\n                  setStrategiesToggle(!strategiesToggle);\n              }}>{strategiesToggle?\"Close Strategies\":\"Open Strategies\"}\n                </div>\n              {!strategiesToggle?null:\n              \n              <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              &nbsp;&nbsp;\n              <table border=\"1px solid black;\" >\n\n                <tr><th>&nbsp;&nbsp;Strategy&nbsp;&nbsp;</th></tr>\n                {strategiesR.length > 0 ? (\n                  <tr>\n                    <th>{\"Name\"}</th> \n                  </tr>\n                ) : null}\n        \n                                {strategiesR.map((item) => {\n                                  return (\n                                    <tr>\n                                      <td>{item.name}</td>\n                                      \n                                      <td>{<button onClick={async ()=>{\n                                            let resp = await getChartinkData(item.url, \"backtest\", item.scan);\n                                            loadData(resp.data);\n                                            // alert(JSON.stringify(resp));\n                                      }}>{item.name!=\"All Strategies\"?\"Load Past Data\":null}</button>}</td>\n                                      \n                                      <td>{<button onClick={async ()=>{\n                                            let resp = await getChartinkData(item.url, \"screener\", item.scan);\n                                            // loadTodaysData(resp.data);\n                                      }}>{item.name!=\"All Strategies\"?\"Load Todays Data\":null}</button>}</td>\n                                      {/* <td>{JSON.stringify(item)}</td> */}\n                                    </tr>\n                                  );\n                                })}\n                              </table>\n                              </div>        \n              }\n\n\n            <div style={{marginLeft:50}}\n              onClick={async ()=>{\n                // await fetchDatesApi();  \n\n                let newPriceData = createAfterDateObj(data, 1);\n                // console.log(\"NEWPRICE DATA: \", JSON.stringify(newPriceData));\n                let priceObj = { 1: { ...newPriceData } };\n                setAfterDayPrices({...afterDayPrices, ...priceObj});\n              }}\n            >Add After 1 D List</div>\n\n            <div style={{marginLeft:50}}\n              onClick={async ()=>{\n                // await fetchDatesApi(); \n\n                let newPriceData = createAfterDateObj(data, 2);\n                // console.log(\"NEWPRICE DATA: \", JSON.stringify(newPriceData));\n                let priceObj = { 2: { ...newPriceData } };\n                setAfterDayPrices({...afterDayPrices, ...priceObj});\n              }}\n            >Add After 2 D List</div>\n\n            <div style={{marginLeft:50}}\n              onClick={async ()=>{\n                // await fetchDatesApi(); \n\n                let newPriceData = createAfterDateObj(data, 3);\n                // console.log(\"NEWPRICE DATA: \", JSON.stringify(newPriceData));\n                let priceObj = { 3: { ...newPriceData } };\n                setAfterDayPrices({...afterDayPrices, ...priceObj});\n              }}\n            >Add After 3 D List</div>\n\n            <div style={{marginLeft:50}}\n              onClick={async ()=>{\n                // await fetchDatesApi(); \n\n                let newPriceData = createAfterDateObj(data, 5);\n                // console.log(\"NEWPRICE DATA: \", JSON.stringify(newPriceData));\n                let priceObj = { 5: { ...newPriceData } };\n                setAfterDayPrices({...afterDayPrices, ...priceObj});\n              }}\n            >Add After 5 D List</div>\n\n            <div style={{marginLeft:50}}\n                onClick={async ()=>{\n                  // await fetchDatesApi(); \n\n                  let newPriceData = createAfterDateObj(data, 10);\n                  // console.log(\"NEWPRICE DATA: \", JSON.stringify(newPriceData));\n                  let priceObj = { 10: { ...newPriceData } };\n                  setAfterDayPrices({...afterDayPrices, ...priceObj});\n                }}\n            >Add After 10 D List</div>\n            {/* <div style={{marginLeft:100}}>{JSON.stringify(backTestPrices)}</div> */}\n          </div>\n        {toggleStatus ? <CSVReader\n            onDrop={handleOnDrop}\n            onError={handleOnError}\n            addRemoveButton\n            removeButtonColor='#659cef'\n            onRemoveFile={handleOnRemoveFile}\n          >\n            <span>Drop CSV file here or click to upload.</span>\n          </CSVReader>: null}\n\n          <div style={{display:\"flex\", flexDirection:\"row\", marginTop:0}}>\n            <div>\n            <div onClick={async ()=>{\n              if(data.length == 0){\n                alert(\"Please add the csv\");\n                return;\n              }\n\n              findAllPrices(data);\n              \n\n              // let allTimestamps = await fetchAllDatesFromToday();\n              // afterDatesArrayFromSpecifiedDate(allTimestamps);\n              \n            }} style={{marginLeft:30, fontSize:20, marginTop:20}}>Test {(loading+1)} / {data.length}</div>\n\n          <table style={{}}  border=\"3px solid black;\">\n            <th>Date</th>\n            <th>Symbol</th>\n            <th style={{fontSize:6}}>Market Cap</th>\n            {/* <th>Sector</th> */}\n            <th>Prev Day</th>\n            <th>Close</th>\n            <th>P&L</th>\n            <th>Ret</th>\n            <th>DJ</th>\n              {data.map(({data}) => {\n                  // console.log(\"DATA: \", JSON.stringify(data));\n                  let date = data[0].split(\"-\"); \n                  let dateString = date[0]+\"-\"+months[date[1]]+\"-\"+date[2]+\"\"+data[1];\n                  let prevclose = 0;\n                  let close = 0;\n                  let open = 0;\n                  let pl = 0;\n                  let ret = 0;\n                  if(backTestPrices[dateString]){\n                    prevclose =  backTestPrices[dateString].prevclose;\n                    close =  backTestPrices[dateString].close;\n                    open = backTestPrices[dateString].open;\n                    pl = close - prevclose;\n                    ret = (pl / open) * 100;\n                  }\n                  return(\n                    <tr>\n                        <td>{data[0]}</td>\n                        <td>{data[1]}</td>\n                        <td>{data[2]}</td>\n                        {/* <td>{data[3]}</td> */}\n                        {/* <td>{JSON.stringify(backTestPrices[\"28-JUL-2020DRREDDY\"])}</td> */}\n                        <td>{prevclose}</td>\n                        <td>{close}</td>\n                        <td style={{backgroundColor:pl>0?\"green\":pl==0?\"grey\":\"red\", color:\"white\", fontWeight:\"bold\"}}>{Number(pl).toFixed(2)}</td>\n                        <td style={{backgroundColor:pl>0?\"green\":pl==0?\"grey\":\"red\", color:\"white\", fontWeight:\"bold\"}}>{Number(ret).toFixed(2)}%</td>\n                        {/*  */}\n                    </tr>\n                  )\n              })}\n          </table>\n          </div>\n            {Object.keys(afterDayPrices).map(item => {\n              // Object.keys(afterDayPrices);\n              let afterDayData = afterDayPrices[item];\n              console.log(\"ITEM: \", JSON.stringify(afterDayData));\n\n              let totalStocks = Object.keys(afterDayData).length;\n                return(\n                  <div>\n                    <div style={{marginLeft:30, fontSize:20, marginTop:20}}\n                      onClick={()=>{            \n                        findPricesAfterNDays(afterDayData, item);\n                      }}\n                    >Test After {item} D  {\" ### \"}{(numberCounter[item] ? numberCounter[item] : 0)} / {totalStocks}###### Profit: {JSON.stringify(profit)}</div> \n                    <table style={{marginLeft:20}} border=\"3px solid black;\">\n                    <th>Date</th>\n                    <th>Symbol</th>\n                    <th style={{fontSize:12}}>Prev Close</th>\n                    <th>Open</th>\n                    <th>Close</th>\n                    <th>Gapup%</th>\n                    <th>High%</th>\n                    <th>Low</th>\n                    <th>Low Per</th>\n                    <th>P&L</th>\n                    <th>Ret</th>\n                    <th>FP</th>\n                    <th>FP%</th>\n                    {\n                      data.map(({data}) => {\n                        {/* <tr><td>{afterDayData.date}</td></tr> */}\n                        let datestring = data[0]+\"\"+data[1];\n                        let pl = 0;\n                        let per = 0;\n                        let gapUp = 0;\n                        let gapUpPer = 0;\n                        let high=0;\n                        let low = 0;\n                        let lowPer = 0;\n                        let chartLink = \"\";\n                        let fp=0;\n                        let fpPer = 0;\n                        if(afterDayData[datestring]) {\n                          low = afterDayData[datestring].low;\n                          pl = Number(afterDayData[datestring].close - afterDayData[datestring].prevclose).toFixed(2);\n                          per = Number((pl/afterDayData[datestring].prevclose)*100).toFixed(2)+\"%\";\n                          gapUp = Number((afterDayData[datestring].open - afterDayData[datestring].prevclose)).toFixed(2);\n                          gapUpPer = Number((gapUp/afterDayData[datestring].prevclose)*100).toFixed(2);\n                          high = Number(((afterDayData[datestring].high-afterDayData[datestring].prevclose)/afterDayData[datestring].prevclose)*100).toFixed(2);\n                          lowPer = Number(((low-afterDayData[datestring].prevclose)/afterDayData[datestring].prevclose) * 100).toFixed(2);\n                          chartLink = \"https://www.tradingview.com/chart/?symbol=\"+afterDayData[datestring].symbol;\n                          let dateStrArr = datestring.split(\"-\");\n                          // fp = JSON.stringify(backTestPrices);\n                          if(backTestPrices && backTestPrices[dateStrArr[0]+\"-\"+months[dateStrArr[1]]+\"-\"+ dateStrArr[2]]) {\n                            fp = Number(afterDayData[datestring].high - backTestPrices[dateStrArr[0]+\"-\"+months[dateStrArr[1]]+\"-\"+ dateStrArr[2]].close).toFixed(2);;\n                            fpPer = Number((fp/backTestPrices[dateStrArr[0]+\"-\"+months[dateStrArr[1]]+\"-\"+ dateStrArr[2]].close)*100).toFixed(2);\n                          }\n                        }\n                                  \n                        return (\n                            <tr>\n                              <td>{afterDayData[datestring] && afterDayData[datestring].date}</td>\n                              <td onClick={()=>window.open(chartLink, '_blank')}>{afterDayData[datestring] && afterDayData[datestring].symbol}</td>\n                              <td>{afterDayData[datestring] && afterDayData[datestring].prevclose}</td>\n                              <td>{afterDayData[datestring] && afterDayData[datestring].open}</td>\n                              <td>{afterDayData[datestring] && afterDayData[datestring].close}</td>\n                              <td style={{backgroundColor:gapUp>0?\"green\":(gapUp==0 || datestring == \"UNAVAIL\")?\"grey\":\"red\", color:\"white\", fontWeight:\"bold\"}}>{gapUpPer}%</td>\n                              <td style={{backgroundColor:high>0?\"green\":(high==0 || datestring == \"UNAVAIL\")?\"grey\":\"red\", color:\"white\", fontWeight:\"bold\"}}>{high}%</td>\n                              <td style={{backgroundColor:lowPer>0?\"green\":(lowPer==0 || datestring == \"UNAVAIL\")?\"grey\":\"red\", color:\"white\", fontWeight:\"bold\"}}>{Number(low).toFixed(2)}</td>\n                              <td style={{backgroundColor:lowPer>0?\"green\":(lowPer==0 || datestring == \"UNAVAIL\")?\"grey\":\"red\", color:\"white\", fontWeight:\"bold\"}}>{lowPer}%</td>\n                              <td style={{backgroundColor:pl>0?\"green\":(pl==0 || datestring == \"UNAVAIL\")?\"grey\":\"red\", color:\"white\", fontWeight:\"bold\"}}>{pl}</td>\n                              <td style={{backgroundColor:pl>0?\"green\":(pl==0 || datestring == \"UNAVAIL\")?\"grey\":\"red\", color:\"white\", fontWeight:\"bold\"}}>{per}</td>\n                              {/* <td style={{backgroundColor:fp>0?\"green\":(fp==0 || datestring == \"UNAVAIL\")?\"grey\":\"red\", color:\"white\", fontWeight:\"bold\"}}>{fp}</td>\n                              <td style={{backgroundColor:fp>0?\"green\":(fp==0 || datestring == \"UNAVAIL\")?\"grey\":\"red\", color:\"white\", fontWeight:\"bold\"}}>{fpPer}%</td> */}\n                            </tr>\n                        );\n                      })\n                    }\n                  </table>\n                </div>\n                )              \n            })}\n          </div>\n          </div>\n      )\n  }\n\n  export default Backtesting;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport WatchList from './app/watchlist';\nimport Strategies from './app/strategies';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  HashRouter\n} from \"react-router-dom\";\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport Header from \"./app/header\";\nimport Backtesting from \"./app/backtesting\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n<Provider store={store}>\n  <PersistGate loading={null} persistor={persistor}>\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/\">\n          <Route path=\"/bp/watchlist\" element={<WatchList />} />\n          <Route path=\"/bp/strategies\" element={<Strategies />} />\n          <Route path=\"/bp/backtest\" element={<Backtesting />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  </PersistGate>\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}