{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","watchList","setWatchList","searchStock","length","searchApi","axios","request","method","url","encodeURIComponent","then","response","console","log","JSON","parse","data","contents","quotes","alert","useEffect","className","type","placeholder","value","onChange","event","target","onKeyDown","e","keyCode","onClick","style","tableBorder","borderColor","map","item","exchDisp","shortname","score","some","i","symbol","addStockToList","filtered","filter","el","removeStockFromList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAsIeA,MA9Hf,WAAgB,IAAD,EACuBC,IAAMC,SAAS,IADtC,mBACNC,EADM,KACMC,EADN,OAE6BH,IAAMC,SAAS,IAF5C,mBAENG,EAFM,KAESC,EAFT,OAGqBL,IAAMC,SAAS,IAHpC,mBAGNK,EAHM,KAGKC,EAHL,KAgBPC,EAAc,WAClB,GAAyB,GAArBN,EAAWO,OAAf,CAKA,IAAIC,EACF,wDACAR,EACA,iOACFS,IACGC,QAAQ,CACPC,OAAQ,MACRC,IAAI,sCAAD,OAAwCC,mBACzCL,MAGHM,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZZ,EAAiBe,KAAKC,MAAMJ,EAASK,KAAKC,UAAUC,gBAjBtDC,MAAM,+BAoCV,OAJAC,qBAAU,WACRR,QAAQC,IAAI,WACX,IAGD,sBAAKQ,UAAU,MAAf,UACE,uBACEC,KAAK,OACLC,YAAY,SACZC,MAAO5B,EACP6B,SAvDe,SAACC,GACpB7B,EAAc6B,EAAMC,OAAOH,QAuDvBI,UApDiB,SAACC,GAEJ,KAAdA,EAAEC,SACJ5B,OAmDA,yBACE6B,QAAS,WACP7B,KAFJ,UAKG,IALH,SAMS,OAGT,wBAAO8B,MAAO,CAAEC,YAAa,EAAGC,YAAa,SAA7C,UACE,+BACE,6BAAK,aACL,6BAAK,SAFP,IAEoB,6BAAK,aAExBpC,EAAcqC,KAAI,SAACC,GAClB,OACE,+BACE,6BAAKA,EAAKC,WADZ,IAC2B,6BAAKD,EAAKE,YAAgB,IACnD,+BACGF,EAAKG,MACL,QAEH,6BAEI,wBACER,QAAS,YAjDJ,SAACK,GACtBxB,QAAQC,IAAIb,EAAUwC,MAAK,SAAAC,GAAC,OAAEA,EAAEC,SAAWN,EAAKM,WAC5C1C,EAAUwC,MAAK,SAAAC,GAAC,OAAEA,EAAEC,SAAWN,EAAKM,WACtCzC,EAAa,CAACmC,GAAF,mBAAUpC,KA+CN2C,CAAeP,IAFnB,4BAhCd,aA8CE,wBAAOJ,MAAO,CAAEC,YAAa,EAAGC,YAAa,SAA7C,UACGlC,EAAUG,OAAS,EAClB,+BACE,6BAAK,aACL,6BAAK,SACL,6BAAK,aAEL,KACHH,EAAUmC,KAAI,SAACC,GACd,OACE,+BACE,6BAAKA,EAAKC,WADZ,IAC2B,6BAAKD,EAAKE,YAAgB,IACnD,+BACGF,EAAKG,MACL,QAEH,6BAAK,wBAAQR,QAAS,kBAxEN,SAACK,GAC3B,IAAIQ,EAAW5C,EAAU6C,QAAO,SAAAC,GAAQ,OAAOA,EAAGJ,SAAWN,EAAKM,UAChEzC,EAAa,YAAI2C,IAsEiBG,CAAoBX,IAAzC,mCCjHJY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d234bd5e.chunk.js","sourcesContent":["import \"./App.css\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nconst proxyAPI2 = \"https://cors-anywhere.herokuapp.com/\";\nconst proxyAPI = \"http://thingproxy.freeboard.io/\";\nconst proxyAPI3 = \"http://www.whateverorigin.org/get?url=\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [watchList, setWatchList] = React.useState([]);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.keyCode === 13) {\n      searchStock();\n    }\n  };\n\n  const searchStock = () => {\n    if (searchTerm.length == 0) {\n      alert(\"Please enter name of stock\");\n      return;\n    }\n\n    let searchApi =\n      \"https://query2.finance.yahoo.com/v1/finance/search?q=\" +\n      searchTerm +\n      \"&quotesCount=6&newsCount=0&enableFuzzyQuery=false&quotesQueryId=tss_match_phrase_query&multiQuoteQueryId=multi_quote_single_token_query&newsQueryId=news_ss_symbols&enableCb=false&enableNavLinks=false&vespaNewsTimeoutMs=600\";\n    axios\n      .request({\n        method: \"get\",\n        url: `https://api.allorigins.win/get?url=${encodeURIComponent(\n          searchApi\n        )}`,\n      })\n      .then((response) => {\n        console.log(response);\n        setSearchResults(JSON.parse(response.data.contents).quotes);\n      });\n  };\n\n  const addStockToList = (item) => {\n    console.log(watchList.some(i=>i.symbol === item.symbol));\n    if(!watchList.some(i=>i.symbol === item.symbol))\n      setWatchList([item,...watchList]);\n  };\n\n  const removeStockFromList = (item) => {\n    var filtered = watchList.filter(el => { return el.symbol !== item.symbol; });\n      setWatchList([...filtered]);\n  };\n\n  useEffect(() => {\n    console.log(\"HELLO\");\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleChange}\n        onKeyDown={handleKeypress}\n      />\n      <button\n        onClick={() => {\n          searchStock();\n        }}\n      >\n        {\" \"}\n        Search{\" \"}\n      </button>\n      {/* {JSON.stringify()} */}\n      <table style={{ tableBorder: 1, borderColor: \"black\" }}>\n        <tr>\n          <th>{\"Exchange\"}</th>\n          <th>{\"Name\"}</th> <th>{\"Price\"}</th>\n        </tr>\n        {searchResults.map((item) => {\n          return (\n            <tr>\n              <td>{item.exchDisp}</td> <td>{item.shortname}</td>{\" \"}\n              <td>\n                {item.score}\n                {\"  \"}\n              </td>\n              <td>\n                {\n                  <button\n                    onClick={() => {\n                      addStockToList(item);\n                    }}\n                  >\n                    Add\n                  </button>\n                }\n              </td>\n            </tr>\n          );\n        })}\n      </table>\n      Watch List\n      <table style={{ tableBorder: 1, borderColor: \"black\" }}>\n        {watchList.length > 0 ? (\n          <tr>\n            <th>{\"Exchange\"}</th>\n            <th>{\"Name\"}</th> \n            <th>{\"Price\"}</th>\n          </tr>\n        ) : null}\n        {watchList.map((item) => {\n          return (\n            <tr>\n              <td>{item.exchDisp}</td> <td>{item.shortname}</td>{\" \"}\n              <td>\n                {item.score}\n                {\"  \"}\n              </td>\n              <td>{<button onClick={()=>removeStockFromList(item)}>Remove</button>}</td>\n            </tr>\n          );\n        })}\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}